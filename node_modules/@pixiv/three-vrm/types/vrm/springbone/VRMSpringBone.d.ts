import * as THREE from 'three';
import { VRMSpringBoneColliderMesh } from './VRMSpringBoneColliderGroup';
import { VRMSpringBoneParameters } from './VRMSpringBoneParameters';
export declare class VRMSpringBone {
    radius: number;
    stiffnessForce: number;
    gravityPower: number;
    gravityDir: THREE.Vector3;
    dragForce: number;
    colliders: VRMSpringBoneColliderMesh[];
    readonly bone: THREE.Object3D;
    protected _currentTail: THREE.Vector3;
    protected _prevTail: THREE.Vector3;
    protected _nextTail: THREE.Vector3;
    protected _boneAxis: THREE.Vector3;
    protected _centerSpaceBoneLength: number;
    protected _centerSpacePosition: THREE.Vector3;
    protected _center: THREE.Object3D | null;
    get center(): THREE.Object3D | null;
    set center(center: THREE.Object3D | null);
    private _parentWorldRotation;
    private _initialLocalMatrix;
    private _initialLocalRotation;
    private _initialLocalChildPosition;
    constructor(bone: THREE.Object3D, params?: VRMSpringBoneParameters);
    reset(): void;
    update(delta: number): void;
    private _collision;
    private _getMatrixCenterToWorld;
    private _getMatrixWorldToCenter;
    private _getParentMatrixWorld;
}
